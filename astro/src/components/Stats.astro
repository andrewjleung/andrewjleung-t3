---
---

<div>
  <div id="weather-stat" class="font-mono min-h-[3em]"></div>
  <div id="spotify-stat" class="font-mono min-h-[3em]"></div>
  <div id="github-stat" class="font-mono min-h-[3em]"></div>
<div/>

<script>
  import { randomCharacterTransition } from '../scripts/random-character-transition.ts'
  import { actions } from 'astro:actions'
  import { z } from 'astro:schema'

  randomCharacterTransition(actions.weather.getWeather.orThrow, (str) => {
    document.getElementById("weather-stat").textContent = str
  }, "Based in Fort Worth, TX")

  const stat = async () => await actions.spotify.getCurrentTrack.orThrow().then((currentTrackResponse) => {
    const getHrefFromUri = (uri: string): string | undefined => {
      const result = z
        .tuple([z.string(), z.string(), z.string()])
        .safeParse(uri.split(":"));

      if (!result.success) {
        return;
      }

      const [, type, id] = result.data;
      return `https://open.spotify.com/${type}/${id}`;
    };

    const components = (() => {
      if (currentTrackResponse === undefined) return; 
      if (currentTrackResponse.status === "failure") return;

      const trackHref = getHrefFromUri(currentTrackResponse.track.uri);

      if (trackHref === undefined) return;

      const artists = currentTrackResponse.track.artists.flatMap((artist) => {
        const href = getHrefFromUri(artist.uri);

        if (href === undefined)  return []; 

        return [
          {
            name: artist.name,
            href,
          },
        ];
      });

      return {
        preamble: currentTrackResponse.isCurrentlyPlaying
          ? "Listening to"
          : "Last listened to",
        trackHref,
        trackName: currentTrackResponse.track.name,
        lastPlayedTrackArtists: artists,
      };
    })();

    const data = (() => {
      if (components === undefined) {
        return;
      }

      const artistNames = components.lastPlayedTrackArtists
        .map(({ name }) => name)
        .join(", ");

      return `${components.preamble} ${components.trackName} by ${artistNames}`;
    })();

    return data
  })

  randomCharacterTransition(stat, (str) => {
    document.getElementById("spotify-stat").textContent = str
  }, "Probably listening to Mk.gee...")
</script>
